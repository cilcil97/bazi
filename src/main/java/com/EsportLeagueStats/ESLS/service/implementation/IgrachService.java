package com.EsportLeagueStats.ESLS.service.implementation;import com.EsportLeagueStats.ESLS.model.Igrachi;import com.EsportLeagueStats.ESLS.persistance.IgrachRepository;import com.EsportLeagueStats.ESLS.service.IgrachServiceInterface;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Servicepublic class IgrachService implements IgrachServiceInterface {    private final IgrachRepository igrachRepository;    public IgrachService(IgrachRepository igrachRepository) {        this.igrachRepository = igrachRepository;    }    @Override    public List<Igrachi> findAllIgrachi() {        return igrachRepository.findAll();    }    @Override    public Igrachi findIgrachById(Integer id) {        return igrachRepository.findById(id).                orElseThrow(() -> new RuntimeException("Igracot ne e vo bazata"));    }    public Igrachi addIgrach(String akronim, String drzava, String ime, String pozicija) {        Igrachi igrachi = new Igrachi(akronim, drzava, ime, pozicija);        return igrachRepository.save(igrachi);    }    @Override    @Transactional    public void deleteIgrach(int id) {        Igrachi igrach = igrachRepository.findById(id).orElseThrow(() -> new RuntimeException("Nema takov igrach"));        igrachRepository.delete(igrach);    }    //TODO find bugs when you have two players  with equal stats//    @Override//    @Transactional   public Igrachi findBestPlayer(int id) {    return null;    //TODO }    @Transactional    public void deleteAllIgrachi() {        igrachRepository.deleteAll();    }}